<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FastDDS_Manual on じゃがびぃのサイト</title>
    <link>/categories/fastdds_manual/</link>
    <description>Recent content in FastDDS_Manual on じゃがびぃのサイト</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2025 じゃがびぃ</copyright>
    <atom:link href="/categories/fastdds_manual/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>1章 DDSとは何か、RTPSとは何か</title>
      <link>/fastdds_manual/whatisdds_rtps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fastdds_manual/whatisdds_rtps/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;1.1 DDSとは何か 
    &lt;div id=&#34;11-dds%E3%81%A8%E3%81%AF%E4%BD%95%E3%81%8B&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#11-dds%E3%81%A8%E3%81%AF%E4%BD%95%E3%81%8B&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;データ配信サービス（DDS）は、分散ソフトウェアアプリケーション通信に使用されるデータ中心の通信プロトコル。データプロバイダーとデータ消費者間の通信を可能にする通信アプリケーションプログラミングインターフェース（API）と通信セマンティクスを記述する。&lt;/p&gt;
&lt;p&gt;データ中心型パブリッシュ・サブスクライブ（DCPS）モデルであるため、その実装では3つの主要なアプリケーションエンティティが定義されている&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;情報生成オブジェクトとその特性を定義するパブリケーションエンティティ&lt;/li&gt;
&lt;li&gt;情報消費オブジェクトとその特性を定義するサブスクリプションエンティティ&lt;/li&gt;
&lt;li&gt;トピックとして送信される情報の種類を定義し、パブリッシャーとサブスクライバーをそのサービス品質（QoS）特性とともに作成し、上記エンティティの正しい動作を保証する構成エンティティ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DDSはQoSを使用しDDSエンティティの動作特性を定義している。QoSは個々のQoSポリシー（QoSPolicyから派生した型のオブジェクト）で構成されている。これらは、&lt;a href=&#34;https://fast-dds.docs.eprosima.com/en/latest/fastdds/dds_layer/core/policy/policy.html#dds-layer-core-policy&#34; target=&#34;_blank&#34;&gt;Policy&lt;/a&gt;で説明されている。&lt;/p&gt;


&lt;h3 class=&#34;relative group&#34;&gt;1.1.1 DCPSの概念モデル 
    &lt;div id=&#34;111-dcps%E3%81%AE%E6%A6%82%E5%BF%B5%E3%83%A2%E3%83%87%E3%83%AB&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#111-dcps%E3%81%AE%E6%A6%82%E5%BF%B5%E3%83%A2%E3%83%87%E3%83%AB&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;DCPSモデルでは、通信アプリケーションシステムの開発のために4つの基本要素が定義されている。
1. パブリッシャー:
実装するDataWriterの作成と構成を担当するDCPSエンティティ。
DataWriterは実際のメッセージ公開を担当する。
各DataWriterには、メッセージが公開されるトピックが割り当てられる。
2. サブスクライバー:
サブスクライバーしているトピックの下で公開されたデータを受信する責任を持つDCPSエンティティ。
新しいデータの可用性をアプリケーションに通知する責任を持つDataReaderオブジェクトを1つ以上提供する。
3. トピック:
パブリッシャーとサブスクライバーを結びつけるエンティティ。
DDSドメイン内で一意。
TopicDescriptionを通じて、パブリッシャーとサブスクライバーのデータ型の統一性を可能にします。
4. ドメイン:
異なるトピックの下でデータを交換する、1つ以上のアプリケーションに属するすべてのパブリッシャーとサブスクライバーをリンクするために使用される概念。
ドメインに参加する個々のアケーションは、DomainParticipantと呼ばれる。
DDSドメインはドメインIDによって識別される。
DomainParticipantはドメインIDを定義して、所属するDDSドメインを指定する。
異なるIDを持つ2つのDomainParticipantは、ネットワーク上でお互いの存在を認識しない。したがって、複数の通信チャネルを作成できる。
これは、それぞれのDomainParticipantが互いに通信する複数のDDSアプリケーションを使用しているが、これらのアプリケーションが干渉してはならない際に適用される。
DomainParticipantは他のDCPSエンティティのコンテナとして機能し、パブリッシャー、サブスクライバー、およびトピックエンティティのファクトリとして機能し、ドメイン内で管理サービスを提供する。&lt;/p&gt;
&lt;p&gt;これらの要素は以下の図に示される。

    &lt;figure&gt;
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        loading=&#34;lazy&#34;
        src=&#34;/fastdds_manual/whatisdds_rtps/dds_domain_ja.svg&#34;
        alt=&#34;DDSドメイン内のDCPSモデルエンティティ&#34;
      /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;


&lt;h2 class=&#34;relative group&#34;&gt;1.2 RTPSとは何か 
    &lt;div id=&#34;12-rtps%E3%81%A8%E3%81%AF%E4%BD%95%E3%81%8B&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#12-rtps%E3%81%A8%E3%81%AF%E4%BD%95%E3%81%8B&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;リアルタイムパブリッシュサブスクライブ（RTPS）プロトコルは、DDSアプリケーションをサポートするために開発され、UDPのようなベストエフォート型トランスポート上のパブ-サブ通信ミドルウェアである。&lt;br&gt;
さらに、Fast DDSはTCPと共有メモリ（SHM）トランスポートのサポートを提供している。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>1章 シンプルなC&#43;&#43;パブリッシャーとサブスクライバーアプリケーションの作成</title>
      <link>/fastdds_manual/writhingpubsubapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fastdds_manual/writhingpubsubapp/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;1.3 シンプルなC++パブリッシャーとサブスクライバーアプリケーションの作成 
    &lt;div id=&#34;13-%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AAc%E3%83%91%E3%83%96%E3%83%AA%E3%83%83%E3%82%B7%E3%83%A3%E3%83%BC%E3%81%A8%E3%82%B5%E3%83%96%E3%82%B9%E3%82%AF%E3%83%A9%E3%82%A4%E3%83%90%E3%83%BC%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E4%BD%9C%E6%88%90&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#13-%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AAc%E3%83%91%E3%83%96%E3%83%AA%E3%83%83%E3%82%B7%E3%83%A3%E3%83%BC%E3%81%A8%E3%82%B5%E3%83%96%E3%82%B9%E3%82%AF%E3%83%A9%E3%82%A4%E3%83%90%E3%83%BC%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E4%BD%9C%E6%88%90&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;このセクションでは、C++APIを使用してシンプルなFastDDSアプリケーションをパブリッシャーとサブスクライバーで作成する方法を段階的に説明する。また、eProsima Fast DDS-Genツールを用いて、このセクションで実装されているものと同様の例を自動生成することも可能である。
この追加のアプローチは、「パブリッシュ/サブスクライバーアプリケーションの構築」で説明されている。&lt;/p&gt;


&lt;h3 class=&#34;relative group&#34;&gt;1.3.1 背景 
    &lt;div id=&#34;131-%E8%83%8C%E6%99%AF&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#131-%E8%83%8C%E6%99%AF&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;DDSは、DCPSモデルを実装するデータ中心の通信ミドルウェアである。このモデルは、データを生成する要素であるパブリッシャーと、データを消費するサブスクライバーの開発に基づいている。
これらのエンティティは、トピックを介して通信する。トピックは両方のDDSエンティティを結びつける要素である。パブリッシャーはトピックの下で情報を生成し、サブスクライバーは同じトピックをサブスクライブして情報を受け取る。&lt;/p&gt;


&lt;h3 class=&#34;relative group&#34;&gt;1.3.2 前提条件 
    &lt;div id=&#34;132-%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#132-%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;まず、eProsima FastDDSとそのすべての依存関係をインストールするために、インストールマニュアルに記載されている手順に従う必要がある。また、eProsima FastDDS-Genツールのインストールについても、インストールマニュアルに記載されている手順を完了している必要がある。
このチュートリアルで提供されている全てのコマンドは、Linux環境用に記述されている。&lt;/p&gt;


&lt;h3 class=&#34;relative group&#34;&gt;1.3.3 アプリケーションワークスペースの作成 
    &lt;div id=&#34;133-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#133-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;プロジェクトの最後には、アプリケーションワークスペースは以下の構造を持つことになる。
&lt;code&gt;build/DDSHelloWorldPublisher &lt;/code&gt;と &lt;code&gt;build/DDSHelloWorldSubscriber&lt;/code&gt;は、それぞれパブリッシャーとサブスクライバーアプリケーションである。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>2章 ライブラリーの概要</title>
      <link>/fastdds_manual/libraryoverview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fastdds_manual/libraryoverview/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;2 ライブラリーの概要 
    &lt;div id=&#34;2-%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%83%BC%E3%81%AE%E6%A6%82%E8%A6%81&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#2-%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%83%BC%E3%81%AE%E6%A6%82%E8%A6%81&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;FastDDS(旧FastRTPS)は、分散アプリケーションソフトウェアのためのデータ中心通信ミドルウェア(DCPS)であるDDS仕様の効率的で高性能な実装である。&lt;br&gt;
このセクションでは、FastDDSのアーキテクチャ、動作、および主な機能について説明する。&lt;/p&gt;


&lt;h2 class=&#34;relative group&#34;&gt;2.1 アーキテクチャ 
    &lt;div id=&#34;21-%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#21-%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;高速DDSのアーキテクチャは下図のようになっており、以下のような異なる環境を持つレイヤーモデルを見ることができる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;アプリケーションレイヤー&lt;/strong&gt;:分散システムにおける通信の実装にFastDDSAPIを使用するユーザーアプリケーション。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FastDDSレイヤー&lt;/strong&gt;:DDS通信ミドルウェアの堅牢な実装。同一ドメイン内のDo0mainParticipantがドメイントピックの下でパブリッシュ/サブスクライブすることでメッセージを交換する、１つまたは複数のDDSドメインの展開を可能にする。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RTPSレイヤー&lt;/strong&gt;:DDSアプリケーションとの相互運用性のためのRTPS(Real-Time Publish-Subscribe)プロトコルの実装。このレイヤーは、トランスポートレイヤーの抽象化レイヤーとして機能する。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;トランスポートレイヤー&lt;/strong&gt;:FastDDSは、信頼性の低いトランスポートプロトコル(UDP)、信頼性の高いトランスポートプロトコル(TCP)、共有メモリトランスポートプロトコル(SHM)など、様々なトランスポートプロトコル上で使用できる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        loading=&#34;lazy&#34;
        src=&#34;/fastdds_manual/libraryoverview/library_overview.svg&#34;
        alt=&#34;library_overview&#34;
      /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;


&lt;h2 class=&#34;relative group&#34;&gt;2.1 DDSレイヤー 
    &lt;div id=&#34;21-dds%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BC&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#21-dds%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BC&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;FastDDSのDDSレイヤーでは、通信のためのいくつかの重要な要素が定義されている。ユーザーはアプリケーションでこれらの要素を作成しDDSアプリケーション要素を組み込んでデータ中心の通信システムを作成する。&lt;br&gt;
FastDDSは、DDS使用に従い、通信に関わるこれらの要素をエンティティとして定義する。DDSエンティティとは、QoS(Quality of Service)設定をサポートし、リスナーを実装するオブジェクトのことである。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;QoS&lt;/strong&gt;: 各エンティティの動作が定義されるメカニズム。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;リスナー&lt;/strong&gt;: アプリケーションの実行中に発生する可能性があるイベントをエンティティに通知するメカニズム。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下に、DDSエンティティをその説明と機能とともに列挙する。 各エンティティの詳細、QoS、リスナーについてはDDSレイヤーの項を参照。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ドメイン&lt;/strong&gt; :DDSドメインを識別する正の整数。各 DomainParticipant には割り当てられた DDS ドメインがあり、同じドメイン内の DomainParticipant が通信したり、DDS ドメイン間の通信を分離したりできる。この値は、アプリケーション開発者がDomainParticipantsを作成するときに指定する必要がある。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>3章 DDSレイヤー</title>
      <link>/fastdds_manual/ddslayer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fastdds_manual/ddslayer/</guid>
      <description>&lt;p&gt;eProsima Fast DDSは、2つの異なるAPIを公開し、異なるレベルで通信サービスと相互作用する。 メインのAPIは、Data Distribution Service (DDS) Data-Centric Publish-Subscribe (DCPS) Platform Independent Model (PIM) API、略してDDS DCPS PIMで、Fast DDSが準拠しているData Distribution Service (DDS) version 1.4仕様で定義されている。 このセクションでは、Fast DDS の下でこの API の主な特徴と使用モードについて説明し、この API が分割された 5 つのモジュールについて詳しく説明する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コア: 他のモジュールによって洗練される抽象クラスとインターフェースを定義する。また、QoS(Quality of Service)の定義や、ミドルウェアとの通知ベースのインタラクションスタイルのサポートも提供する。&lt;/li&gt;
&lt;li&gt;ドメイン: &lt;code&gt;DomainParticipant&lt;/code&gt;クラスが含まれ、サービスのエントリーポイントとして、また多くのクラスのファクトリーとして機能する。DomainParticipantは、サービスを構成する他のオブジェクトのコンテナとしても機能する。&lt;/li&gt;
&lt;li&gt;パブリッシャー: &lt;code&gt;Publisher&lt;/code&gt;クラスと&lt;code&gt;DataWriter&lt;/code&gt;クラス、&lt;code&gt;PublisherListener&lt;/code&gt;インターフェースと&lt;code&gt;DataWriterListener&lt;/code&gt;インターフェースなど、発行側で使用されるクラスについて説明する。&lt;/li&gt;
&lt;li&gt;サブスクライバー: &lt;code&gt;Subscriber&lt;/code&gt;クラスと&lt;code&gt;DataReader&lt;/code&gt;クラス、および&lt;code&gt;SubscriberListener&lt;/code&gt;インターフェースと&lt;code&gt;DataReaderLsetener&lt;/code&gt;インターフェースなど、サブスクリプション側で使用されるクラスについて説明する。&lt;/li&gt;
&lt;li&gt;トピック: &lt;code&gt;Topic&lt;/code&gt;と&lt;code&gt;TopicDescription&lt;/code&gt;クラスなど、通信トピックとデータ型を定義に使用されるクラスについて説明する。&lt;/li&gt;
&lt;/ul&gt;</description>
      
    </item>
    
    <item>
      <title>3章 エンティティ</title>
      <link>/fastdds_manual/ddslayer/3_1core/entity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fastdds_manual/ddslayer/3_1core/entity/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;3.1.1. エンティティ 
    &lt;div id=&#34;311-%E3%82%A8%E3%83%B3%E3%83%86%E3%82%A3%E3%83%86%E3%82%A3&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#311-%E3%82%A8%E3%83%B3%E3%83%86%E3%82%A3%E3%83%86%E3%82%A3&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;エンティティは、全てのDDSエンティティの抽象ベースクラスであり、QoSポリシー、リスナー、ステータスをサポートするオブジェクトを意味する。&lt;/p&gt;


&lt;h3 class=&#34;relative group&#34;&gt;3.1.1.1 エンティティの型 
    &lt;div id=&#34;3111-%E3%82%A8%E3%83%B3%E3%83%86%E3%82%A3%E3%83%86%E3%82%A3%E3%81%AE%E5%9E%8B&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#3111-%E3%82%A8%E3%83%B3%E3%83%86%E3%82%A3%E3%83%86%E3%82%A3%E3%81%AE%E5%9E%8B&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DomainParticipant&lt;/strong&gt;： このエンティティは、サービスのエントリ・ポイントであり、パブリッシャ、サブスクライバ、およびトピックのファクトリとして機能する。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Publisher&lt;/strong&gt;： 任意の数の DataWriters を作成できるファクトリとして動作する。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Subscriber&lt;/strong&gt; : 任意の数の DataWriters を作成できるファクトリとして動作する。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;topic&lt;/strong&gt; : このエンティティは、パブリケーション・エンティティとサブスクリプション・エンティティの間に位置し、チャネルとして機能する。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DataWriter&lt;/strong&gt; : データ配布を担当するオブジェクト。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DataReader&lt;/strong&gt; : 受信したデータにアクセスするためのオブジェクト。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下の図は、全てのDDSエンティティ間の階層を示している:&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        loading=&#34;lazy&#34;
        src=&#34;/fastdds_manual/ddslayer/3_1core/entity/entity_diagram.svg&#34;
        alt=&#34;entity_diagram&#34;
      /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;


&lt;h4 class=&#34;relative group&#34;&gt;3.1.1.2 共通するエンティティの特徴 
    &lt;div id=&#34;3112-%E5%85%B1%E9%80%9A%E3%81%99%E3%82%8B%E3%82%A8%E3%83%B3%E3%83%86%E3%82%A3%E3%83%86%E3%82%A3%E3%81%AE%E7%89%B9%E5%BE%B4&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#3112-%E5%85%B1%E9%80%9A%E3%81%99%E3%82%8B%E3%82%A8%E3%83%B3%E3%83%86%E3%82%A3%E3%83%86%E3%82%A3%E3%81%AE%E7%89%B9%E5%BE%B4&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;全てのエンティティ型には、エンティティの概念に共通するいくつかの特徴がある。以下に示す。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>3章 コア</title>
      <link>/fastdds_manual/ddslayer/3_1core/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fastdds_manual/ddslayer/3_1core/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;3.1 コア 
    &lt;div id=&#34;31-%E3%82%B3%E3%82%A2&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#31-%E3%82%B3%E3%82%A2&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;このモジュールでは、他のモジュールd絵使用されるインフラストラクチャクラスとタイプを定義する。&lt;br&gt;
エンティティクラス、QoSポリシー、およびステータスの定義が含まれる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;エンティティ&lt;/strong&gt;: エンティティは、ステータスを持ち、ポリシーを設定できるDDS通信オブジェクトである。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ポリシー&lt;/strong&gt;: ポリシーは、エンティティの動作を制御する各構成オブジェクトである。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ステータス&lt;/strong&gt;: エンティティに関連する各オブジェクトで、その値はエンティティの通信ステータスを表す。&lt;/li&gt;
&lt;/ul&gt;</description>
      
    </item>
    
    <item>
      <title>3章 ポリシー</title>
      <link>/fastdds_manual/ddslayer/3_1core/policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fastdds_manual/ddslayer/3_1core/policy/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;3.1.2. ポリシー 
    &lt;div id=&#34;312-%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#312-%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;サービス品質（QoS）はサービスの動作を指定するために使用され、ユーザーは各エンティティがどのように動作するかを定義することができる。 システムの柔軟性を高めるため、QoSは複数のQoSポリシーに分割され、それぞれ独立に設定できる。 ただし、複数のポリシーが競合する場合もある。 各Qosポリシーは、QosPolicyId_t列挙子で定義された一意のIDを持つ。 このIDは、一部のStatusインスタンスで、Statusが参照する特定のQos Policyを識別するために使用される。 QoS Policyには不変のものがあり、エンティティの作成時またはenable操作を呼び出す前にのみ指定できる。 各DSエンティティは、標準QoS Policy、XTypes拡張、およびeProsima拡張を混在させることができるQoS Policyの特定のセットを持つ。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>3章 標準的なQoSポリシー</title>
      <link>/fastdds_manual/ddslayer/3_1core/policy/standardqospolicy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fastdds_manual/ddslayer/3_1core/policy/standardqospolicy/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;3.1.2.1. 標準的なQoSポリシー 
    &lt;div id=&#34;3121-%E6%A8%99%E6%BA%96%E7%9A%84%E3%81%AAqos%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#3121-%E6%A8%99%E6%BA%96%E7%9A%84%E3%81%AAqos%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;このセクションでは、DDS標準の各QoSポリシーについて説明する：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DeadlineQosPolicy&lt;/li&gt;
&lt;li&gt;DestinationOrderQosPolicy&lt;/li&gt;
&lt;li&gt;DurabilityQosPolicy&lt;/li&gt;
&lt;li&gt;DurabilityServiceQosPolicy&lt;/li&gt;
&lt;li&gt;EntityFactoryQosPolicy&lt;/li&gt;
&lt;li&gt;GroupDataQosPolicy&lt;/li&gt;
&lt;li&gt;HistoryQosPolicy&lt;/li&gt;
&lt;li&gt;LatencyBudgetQosPolicy&lt;/li&gt;
&lt;li&gt;LifespanQosPolicy&lt;/li&gt;
&lt;li&gt;LivelinessQosPolicy&lt;/li&gt;
&lt;li&gt;OwnershipQosPolicy&lt;/li&gt;
&lt;li&gt;OwnershipStrengthQosPolicy&lt;/li&gt;
&lt;li&gt;PartitionQosPolicy&lt;/li&gt;
&lt;li&gt;PresentationQosPolicy&lt;/li&gt;
&lt;li&gt;ReaderDataLifecycleQosPolicy&lt;/li&gt;
&lt;li&gt;ReliabilityQosPolicy&lt;/li&gt;
&lt;li&gt;ResourceLimitsQosPolicy&lt;/li&gt;
&lt;li&gt;TimeBasedFilterQosPolicy&lt;/li&gt;
&lt;li&gt;TopicDataQosPolicy&lt;/li&gt;
&lt;li&gt;TransportPriorityQosPolicy&lt;/li&gt;
&lt;li&gt;UserDataQosPolicy&lt;/li&gt;
&lt;li&gt;WriterDataLifecycleQosPolicy&lt;/li&gt;
&lt;/ul&gt;


&lt;h4 class=&#34;relative group&#34;&gt;3.1.2.1.1. DeadlineQosPolicy 
    &lt;div id=&#34;31211-deadlineqospolicy&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#31211-deadlineqospolicy&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;このQoSポリシーは、新しいサンプルの頻度がある閾値を下回るとアラームを発する。 これは、データが定期的に更新されることが期待される場合に便利である（&lt;code&gt;DeadlineQosPolicy&lt;/code&gt;を参照）。&lt;br&gt;
公開側では、期限はアプリケーションが新しいサンプルを供給することが期待される最大期間を定義する。&lt;br&gt;
キーを持つトピックの場合、このQoSはキーごとに適用される。 ある車両の位置を定期的に公開する必要があるとする。 その場合、データ型のキーとして車両のIDを設定し、期限QoSを希望する公開期間に設定することが可能である。&lt;/p&gt;
&lt;p&gt;QoS Policyデータメンバー一覧：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;データメンバ名&lt;/th&gt;
          &lt;th&gt;型&lt;/th&gt;
          &lt;th&gt;デフォルト値&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;period&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Duration_t&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;c_TimeInfinite&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;


&lt;h5 class=&#34;relative group&#34;&gt;互換性ルール 
    &lt;div id=&#34;%E4%BA%92%E6%8F%9B%E6%80%A7%E3%83%AB%E3%83%BC%E3%83%AB&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E4%BA%92%E6%8F%9B%E6%80%A7%E3%83%AB%E3%83%BC%E3%83%AB&#34; aria-label=&#34;アンカー&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h5&gt;
&lt;p&gt;DataReaderとDataWriterのDeadlineQosPolicy間の互換性を維持するために、（DataWriterに設定された）オファーされた期限期間は、（DataReaderに設定された）要求された期限期間以下でなければならない。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
